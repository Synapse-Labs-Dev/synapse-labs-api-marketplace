generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
  
model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  username         String?
  onboarded     Boolean?  @default(false) 
  dob           String? 
  accounts      Account[]
  sessions      Session[]
  api_keys      ApiKey[]
  stripe_customer_id       String?
  stripe_subscription_item String?
  role          Role      @default(USER) 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
}

model ApiLog {
  id         String   @id @default(cuid())
  key_name   String
  endpoint   String?
  status     Int?
  created_at DateTime @default(now())
  key_hashed String
  ip         String?
}

model ApiKey {
  id              String   @id @default(uuid())
  key             String   @unique
  iv              String   @unique
  key_hashed      String   @unique
  name            String
  enabled         Boolean  @default(true)
  usage           Int      @default(0)
  max_usage_limit Int      @default(1000)
  user_id         String
  created_at       DateTime @default(now())
  key_tag         String   @unique
  tier            TIER @default(FREE)
  User            User  @relation(fields: [user_id], references: [id])
}

model ContactForm {
  id      String @id @default(cuid())
  name    String
  email   String
  message String
}


enum TIER {
  FREE
  PAID
}

enum Role {
  USER
  ADMIN
  StUSER
}